# -*- CMakeLists.txt generated by CodeLite IDE. Do not edit by hand -*-

cmake_minimum_required(VERSION 2.8.11)

# Workspace name
project(FoXBot)

# This setting is useful for providing JSON file used by CodeLite for code completion
set(CMAKE_EXPORT_COMPILE_COMMANDS 1)

# Set default locations
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)

set(CONFIGURATION_NAME "Release")

# Projects


# Top project
# Define some variables
set(PROJECT_PATH "${CMAKE_SOURCE_DIR}/")



#{{{{ User Code 1
# Place your code here
#}}}}

include_directories(
    .
    ../hlsdk-2.3-p4/multiplayer/cl_dll
    ../hlsdk-2.3-p4/multiplayer/dlls
    ../hlsdk-2.3-p4/multiplayer/common
    ../hlsdk-2.3-p4/multiplayer/engine
    ../hlsdk-2.3-p4/multiplayer/pm_shared
    ../metamod-p-37/metamod

)


# Compiler options
add_definitions(-g)
add_definitions(-O2)
add_definitions(-fexpensive-optimizations)
add_definitions(-Wall)
add_definitions(-march=i686)
add_definitions(-msse2)
add_definitions(-D_strnicmp=strnicmp)
add_definitions(-Wno-unknown-pragmas)
add_definitions(-Wno-write-strings)
add_definitions(
    -DNDEBUG
    -DWIN32
    -D_WINDOWS
    -D_WIN32
    -D_strnicmp=strnicmp
)


# Linker options
set(LINK_OPTIONS -Xlinker)
set(LINK_OPTIONS ${LINK_OPTIONS} -shared)
set(LINK_OPTIONS ${LINK_OPTIONS} -s)


if(WIN32)
    # Resource options
endif(WIN32)

# Library path
set(CMAKE_LDFLAGS "${CMAKE_LDFLAGS} -L. -L. -LDebug ")

# Define the CXX sources
set ( CXX_SRCS
    ${CMAKE_SOURCE_DIR}/bot.cpp
    ${CMAKE_SOURCE_DIR}/bot_client.cpp
    ${CMAKE_SOURCE_DIR}/bot_combat.cpp
    ${CMAKE_SOURCE_DIR}/bot_navigate.cpp
    ${CMAKE_SOURCE_DIR}/bot_start.cpp
    ${CMAKE_SOURCE_DIR}/botcam.cpp
    ${CMAKE_SOURCE_DIR}/dll.cpp
    ${CMAKE_SOURCE_DIR}/engine.cpp
    ${CMAKE_SOURCE_DIR}/h_export.cpp
    ${CMAKE_SOURCE_DIR}/linkfunc.cpp
    ${CMAKE_SOURCE_DIR}/meta_api.cpp
    ${CMAKE_SOURCE_DIR}/sdk_util.cpp
    ${CMAKE_SOURCE_DIR}/util.cpp
    ${CMAKE_SOURCE_DIR}/waypoint.cpp
    ${CMAKE_SOURCE_DIR}/bot_job_assessors.cpp
    ${CMAKE_SOURCE_DIR}/bot_job_functions.cpp
    ${CMAKE_SOURCE_DIR}/bot_job_think.cpp
)

if(WIN32)
    # Define the resource files
    set ( RC_SRCS
        ${CMAKE_SOURCE_DIR}/res_fox.rc
    )
endif(WIN32)

set_source_files_properties(
    ${CXX_SRCS} PROPERTIES COMPILE_FLAGS 
    " -g -O2 -fexpensive-optimizations -Wall -march=i686 -msse2 -D_strnicmp=strnicmp -Wno-unknown-pragmas -Wno-write-strings")

if(WIN32)
    enable_language(RC)
    set(CMAKE_RC_COMPILE_OBJECT
        "<CMAKE_RC_COMPILER> ${RC_OPTIONS} -O coff -i <SOURCE> -o <OBJECT>")
endif(WIN32)



#{{{{ User Code 2
# Place your code here
#}}}}

add_library(FoXBot SHARED ${RC_SRCS} ${CXX_SRCS} ${C_SRCS})
target_link_libraries(FoXBot ${LINK_OPTIONS})

target_link_libraries(FoXBot
    libkernel32.a
    libuser32.a
    libgdi32.a
    libwinspool.a
    libcomdlg32.a
    libadvapi32.a
    libshell32.a
    libole32.a
    liboleaut32.a
    libuuid.a
)



#{{{{ User Code 3
# Place your code here
#}}}}

